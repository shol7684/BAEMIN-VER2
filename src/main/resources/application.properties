
#/update 로 요청이 들어오면 resource.path에서 찾기 
resource.path=file:///C:/resource/
upload.path=/upload/**

# SMTP
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=shol7684@gmail.com
spring.mail.password=fblprutrnzxpepv
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.auth=true





server.servlet.session.timeout=3600
server.servlet.session.cookie.max-age=864000

spring.mvc.view.prefix=/WEB-INF/view/
spring.mvc.view.suffix=.jsp

#기존 log4j x
#spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver
#spring.datasource.url=jdbc:oracle:thin:@localhost:1521/xepdb1

#log4jdbc
spring.datasource.driver-class-name=net.sf.log4jdbc.sql.jdbcapi.DriverSpy
spring.datasource.url=jdbc:log4jdbc:oracle:thin:@localhost:1521/xepdb1
spring.datasource.username=SUMIN2
spring.datasource.password=1234


mybatis.configuration.map-underscore-to-camel-case=true
mybatis.mapper-locations=classpath:com/baemin/mybatis/*.xml
mybatis.type-aliases-package=com.baemin.vo

spring.security.user.name=test
spring.security.user.password=1234


##구글 로그인
spring.security.oauth2.client.registration.google.client-id=111933831457-b0h85m7c58a4pmmahikm2fnfmgc44lj7.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=profile,email
#
##페이스북 로그인
#spring.security.oauth2.client.registration.facebook.client-id=820769735270147
#spring.security.oauth2.client.registration.facebook.client-secret=35903e281d2f3ebd8ac14bd76fd02243
#spring.security.oauth2.client.registration.facebook.scope=public_profile,email
#
##네이버 로그인
#spring.security.oauth2.client.registration.naver.client-id=_GHmuqLF8B9W69eAqBRf
#spring.security.oauth2.client.registration.naver.client-secret=UYunWSIWFv
#spring.security.oauth2.client.registration.naver.scope=name,email
#spring.security.oauth2.client.registration.naver.client-name=Naver
#spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
#spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:8080/login/oauth2/code/naver
#
#spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
#spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
#spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
##회원 정보를 json으로 받는데 response라는 키값으로 네이버가 리턴
#spring.security.oauth2.client.provider.naver.user-name-attribute=response
#
#
##카카오 로그인
#spring.security.oauth2.client.registration.kakao.client-id=2393835f59d6ac4e44bc28411bcd22db
#spring.security.oauth2.client.registration.kakao.client-secret=dER4sUC9C5E9Qifvx3a4gP8GBQiX6FwY
#spring.security.oauth2.client.registration.kakao.redirect-uri=http://localhost:8080/login/oauth2/code/kakao
#spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
#spring.security.oauth2.client.registration.kakao.scope=profile_nickname,account_email
#spring.security.oauth2.client.registration.kakao.client-name:Kakao
#spring.security.oauth2.client.registration.kakao.client-authentication-method=POST
### kAKAO Provider
#spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
#spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
#spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
#spring.security.oauth2.client.provider.kakao.user-name-attribute=id
#
#

#profile_nickname, profile_image, account_email

logging.level.org.springframework.web=info		
logging.level.sql=info
# hibernate에서 생성하는 SQL 로그 끄기
logging.level.org.hibernate.SQL=info
logging.level.jdbc=info
logging.level.jdbc.sqlonly=off
logging.level.jdbc.sqltiming=info
logging.level.jdbc.audit=off
logging.level.jdbc.resultset=off

#max-history 설정 안하면 디폴트가 30이라 30일 이후의 로그는 자동 삭제된다. 필수로 해야함.
logging.file.max-history=9999999
logging.file.max-size=100MB
logging.file.name=C:/tools/log4j/product.log

#  로그 패턴 설정
logging.pattern.console=%-5level %d{yyyy-MM-dd HH:mm:ss}[%thread] [%F - %M] [%logger{0}:%line] - %msg%n
logging.pattern.file= %-5level %d{yyyy-MM-dd HH:mm:ss}[%thread] [%F - %M] [%logger{0}:%line] - %msg%n





